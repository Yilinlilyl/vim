set nu	" 显示行号
set showcmd    " 显示命令"
syntax on	" 语法高亮
set nobackup	" 关闭备份
set noswapfile	" 禁止保存交换文件
set nocompatible	" 关闭兼用模式
set autoindent	" 继承前一行的缩进方式，特别适用于多行注释
set ai  " 自动缩进
set si  " 智能缩进
set ruler   " 右下角显示光标位置
set shiftround
" 设置在状态行显示的信息
set foldcolumn=0
set foldlevel=3
set foldenable	" 允许折叠
set foldmethod=marker	" 手动折叠
set nocompatible    " 关闭兼容模式
set history=1000	" 历史记录数
"	搜索逐字高亮
set hlsearch
set incsearch
"	编码设置
set enc=utf-8
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
set report=0	" 通过使用: commands命令，告诉我们文件的哪一行被改变过
set showmatch	" 高亮显示匹配的括号
syntax enable       " 语法高亮
filetype plugin on  " 文件类型插件
filetype indent on
" 转化为4个字符
set expandtab
set smarttab
set shiftwidth=4
set tabstop=4	" Tab键的宽度
set undofile    " 缺省关闭，局部于缓冲
set ul=1000     " 可以撤销的最大改变次数

" 恢复上次文件打开位置
set viminfo='10,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm'\"")|else|exe "norm $"|endif|endif

" 快捷输入
" 自动完成括号和引号
:inoremap ( ()<ESC>i
:inoremap ) <c-r>=ClosePair(')')<CR>
"   :inoremap { {<CR>}<ESC>O
:inoremap { {}<ESC>i
:inoremap } <c-r>=ClosePair('}')<CR>
:inoremap [ []<ESC>i
:inoremap ] <c-r>=ClosePair(']')<CR>
:inoremap " <c-r>=QuoteDelim('"')<CR>
:inoremap ' <c-r>=QuoteDelim("'")<CR>
function! ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
        return "\<Right>"
    else
        return a:char
    endif
endfunction
function! QuoteDelim(char)
    let line = getline('.')
    let col = col('.')
    if line[col - 2] == "\\"
            "Inserting a quoted quotation mark into the string
        return a:char
    elseif line[col - 1] == a:char
            "   Escaping out of the string
        return "\<Right>"
    else
            "   Starting a string
        return a:char.a:char."\<Esc>i"
    endif
endfunction

filetype plugin indent on  "    开启插件

